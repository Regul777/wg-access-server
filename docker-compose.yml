version: "3.0"
services:
  wg-access-server:
    # to build the docker image from the source
    # build:
    #   dockerfile: Dockerfile
    #   context: .
    image: ghcr.io/freifunkmuc/wg-access-server:latest
    container_name: wg-access-server
    cap_add:
      - NET_ADMIN
    # sysctls:
    #   net.ipv6.conf.all.disable_ipv6: 0
    #   net.ipv6.conf.all.forwarding: 1
    volumes:
      - "wg-access-server-data:/data"
    #   - "./config.yaml:/config.yaml" # if you have a custom config file
    environment:
      WG_ADMIN_PASSWORD: ${WG_ADMIN_PASSWORD:?\n\nplease set the WG_ADMIN_PASSWORD environment variable:\n    export WG_ADMIN_PASSWORD=example\n}
      WG_WIREGUARD_PRIVATE_KEY:  ${WG_WIREGUARD_PRIVATE_KEY:?\n\nplease set the WG_WIREGUARD_PRIVATE_KEY environment variable:\n    export WG_WIREGUARD_PRIVATE_KEY=$(wg genkey)\n}
      WG_VPN_CIDRV6: 0 # to disable IPv6
    ports:
      # - "${WG_WEBSERVER_PORT:-8000}:8000/tcp"
      - "127.0.0.1:8000:8000/tcp"
      - "${WG_WIREGUARD_PORT:-51820}:51820/udp"
    devices:
      - "/dev/net/tun:/dev/net/tun"
    restart: unless-stopped # restart the container on failure
  # auth:
  #   container_name: wg-access-server-auth
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./ngnix/
  #   network_mode: "host"
  #   # No need ports if you use network_mode: "host"
  #   environment:
  #     NGNIX_PORT: ${NGNIX_PORT:-80}
  #     USER: ${WG_WEB_AUTH_USER:?\n\nplease set the WG_WEB_AUTH_USER environment variable:\n    export WG_WEB_AUTH_USER=example\n}
  #     PASS: ${WG_WEB_AUTH_PASS:?\n\nplease set the WG_WEB_AUTH_PASS environment variable:\n    export WG_WEB_AUTH_PASS=example\n}
# shared volumes with the host
volumes:
  wg-access-server-data:
    driver: local
